{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nexport default function useHover() {\n  _s();\n\n  const [hovered, setHovered] = useState(false);\n  const nodeRef = useRef(null);\n  useEffect(() => {\n    const dom = nodeRef.current;\n\n    function handleMouseOver() {\n      setHovered(true);\n    }\n\n    function handleMouseOut() {\n      setHovered(false);\n    }\n\n    if (dom) {\n      dom.addEventListener(\"mouseover\", handleMouseOver);\n      dom.addEventListener(\"mouseout\", handleMouseOut);\n    }\n\n    return () => {\n      dom.removeEventListener(\"mouseover\", handleMouseOver);\n      dom.removeEventListener(\"mouseout\", handleMouseOut);\n    };\n  }, []);\n  return {\n    hovered,\n    nodeRef\n  };\n}\n\n_s(useHover, \"nN7fQHnfRmhvh/YaV1JfAdEQroc=\");","map":{"version":3,"sources":["D:/JS/env/env/src/hooks/useHover.js"],"names":["useEffect","useRef","useState","useHover","hovered","setHovered","nodeRef","dom","current","handleMouseOver","handleMouseOut","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMI,OAAO,GAAGL,MAAM,CAAC,IAAD,CAAtB;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMO,GAAG,GAAGD,OAAO,CAACE,OAApB;;AACA,aAASC,eAAT,GAA0B;AACtBJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AACD,aAASK,cAAT,GAAyB;AACrBL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AACD,QAAGE,GAAH,EAAQ;AACJA,MAAAA,GAAG,CAACI,gBAAJ,CAAqB,WAArB,EAAkCF,eAAlC;AACAF,MAAAA,GAAG,CAACI,gBAAJ,CAAqB,UAArB,EAAiCD,cAAjC;AACH;;AACD,WAAO,MAAM;AACTH,MAAAA,GAAG,CAACK,mBAAJ,CAAwB,WAAxB,EAAqCH,eAArC;AACAF,MAAAA,GAAG,CAACK,mBAAJ,CAAwB,UAAxB,EAAoCF,cAApC;AACH,KAHD;AAIH,GAhBQ,EAgBP,EAhBO,CAAT;AAiBA,SAAO;AACHN,IAAAA,OADG;AAEHE,IAAAA;AAFG,GAAP;AAIH;;GAzBuBH,Q","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function useHover() {\r\n    const [hovered, setHovered] = useState(false);\r\n    const nodeRef = useRef(null);\r\n    \r\n    useEffect(()=>{\r\n        const dom = nodeRef.current;\r\n        function handleMouseOver(){\r\n            setHovered(true);\r\n        }\r\n        function handleMouseOut(){\r\n            setHovered(false);\r\n        }\r\n        if(dom) {\r\n            dom.addEventListener(\"mouseover\", handleMouseOver);\r\n            dom.addEventListener(\"mouseout\", handleMouseOut);\r\n        }\r\n        return () => {\r\n            dom.removeEventListener(\"mouseover\", handleMouseOver);\r\n            dom.removeEventListener(\"mouseout\", handleMouseOut);\r\n        }\r\n    },[]);\r\n    return {\r\n        hovered,\r\n        nodeRef,\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}