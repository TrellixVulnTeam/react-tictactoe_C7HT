{"ast":null,"code":"var _jsxFileName = \"D:\\\\JS\\\\env\\\\env\\\\src\\\\Components\\\\tictactoe\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { calculateWinner } from '../../helpers';\nimport Board from './Board';\nimport \"./GameStyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const winner = calculateWinner(board);\n  const [countDraw, setCountDraw] = useState(0);\n\n  const handleClick = index => {\n    const boardCopy = [...board];\n\n    if (winner || boardCopy[index]) {\n      // console.log(winner)\n      console.log(boardCopy[index]);\n      return;\n    }\n\n    setCountDraw(prev => prev + 1); // console.log(boardCopy[index]);\n\n    boardCopy[index] = xIsNext ? 'X' : \"O\";\n    setBoard(boardCopy);\n    setXIsNext(!xIsNext);\n  };\n\n  const handleResetGame = () => {\n    setBoard(Array(9).fill(null));\n    setCountDraw(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      cells: board,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this), !winner && (countDraw !== 9 ? console.log(countDraw) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-draw\",\n      children: \"DRAW\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 68\n    }, this)), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-winner\",\n      children: [\"winner is \", winner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"game-reset\",\n      onClick: handleResetGame,\n      children: \"Reset Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Game, \"wr9+OpG+RnciLJVij08NICeoxh8=\");\n\n_c = Game;\n;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["D:/JS/env/env/src/Components/tictactoe/Game.js"],"names":["React","useState","calculateWinner","Board","Game","board","setBoard","Array","fill","xIsNext","setXIsNext","winner","countDraw","setCountDraw","handleClick","index","boardCopy","console","log","prev","handleResetGame"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,iBAAP;;;AAEA,SAASC,IAAT,GAAe;AAAA;;AACX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACM,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAlC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMU,MAAM,GAAGT,eAAe,CAACG,KAAD,CAA9B;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,CAAD,CAA1C;;AACA,QAAMa,WAAW,GAAIC,KAAD,IAAW;AAE3B,UAAMC,SAAS,GAAG,CAAC,GAAGX,KAAJ,CAAlB;;AACA,QAAGM,MAAM,IAAIK,SAAS,CAACD,KAAD,CAAtB,EAA+B;AAC3B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACD,KAAD,CAArB;AACA;AACH;;AACDF,IAAAA,YAAY,CAACM,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAZ,CAR2B,CAU3B;;AACAH,IAAAA,SAAS,CAACD,KAAD,CAAT,GAAmBN,OAAO,GAAE,GAAF,GAAQ,GAAlC;AACAH,IAAAA,QAAQ,CAACU,SAAD,CAAR;AACAN,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,GAdD;;AAeA,QAAMW,eAAe,GAAG,MAAM;AAC1Bd,IAAAA,QAAQ,CAACC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAR;AACAK,IAAAA,YAAY,CAAC,CAAD,CAAZ;AAEH,GAJD;;AAKA,sBACI;AAAA,4BACG,QAAC,KAAD;AAAO,MAAA,KAAK,EAAER,KAAd;AAAqB,MAAA,OAAO,EAAES;AAA9B;AAAA;AAAA;AAAA;AAAA,YADH,EAEI,CAACH,MAAD,KAAYC,SAAS,KAAK,CAAd,GAAkBK,OAAO,CAACC,GAAR,CAAYN,SAAZ,CAAlB,gBAA2C;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAvD,CAFJ,EAGID,MAAM,iBAAI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,+BACIA,MADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHd,eAMG;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAES,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAnCQhB,I;;KAAAA,I;AAmCR;AAED,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { calculateWinner } from '../../helpers';\r\nimport Board from './Board';\r\nimport \"./GameStyle.css\";\r\n\r\nfunction Game(){\r\n    const [board, setBoard] = useState(Array(9).fill(null));\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const winner = calculateWinner(board);\r\n    const [countDraw, setCountDraw] = useState(0);\r\n    const handleClick = (index) => {\r\n        \r\n        const boardCopy = [...board];\r\n        if(winner || boardCopy[index]) {\r\n            // console.log(winner)\r\n            console.log(boardCopy[index]);\r\n            return;\r\n        }\r\n        setCountDraw(prev => prev + 1);\r\n      \r\n        // console.log(boardCopy[index]);\r\n        boardCopy[index] = xIsNext? 'X' : \"O\";\r\n        setBoard(boardCopy);\r\n        setXIsNext(!xIsNext);\r\n    }\r\n    const handleResetGame = () => {\r\n        setBoard(Array(9).fill(null));\r\n        setCountDraw(0);\r\n\r\n    }\r\n    return (\r\n        <div>\r\n           <Board cells={board} onClick={handleClick}></Board>\r\n           {!winner && (countDraw !== 9 ? console.log(countDraw) : <div className=\"game-draw\">DRAW</div>)}\r\n           {winner && <div className=\"game-winner\">\r\n               winner is {winner}\r\n           </div>}\r\n           <button className=\"game-reset\" onClick={handleResetGame}>Reset Game</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}