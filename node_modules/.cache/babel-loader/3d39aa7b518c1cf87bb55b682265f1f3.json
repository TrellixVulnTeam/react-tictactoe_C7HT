{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nexport default function useClickOutSide() {\n  _s();\n\n  let dom = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"button\";\n  const [show, setShow] = useState(false);\n  const nodeRef = useRef();\n  const handleClickOutDropDown = useRef({});\n\n  handleClickOutDropDown.current = e => {\n    if (nodeRef.current && !nodeRef.current.contains(e.target) && !e.target.matches(dom)) {\n      setShow(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutDropDown);\n    return () => {\n      document.removeEventListener('click', handleClickOutDropDown);\n    };\n  }, []);\n  return {\n    show,\n    nodeRef,\n    setShow\n  };\n}\n\n_s(useClickOutSide, \"/nloKdKtuVAM8IBf1aoxS2X1vZ4=\");","map":{"version":3,"sources":["D:/JS/env/env/src/hooks/useClickOutSide.js"],"names":["useEffect","useRef","useState","useClickOutSide","dom","show","setShow","nodeRef","handleClickOutDropDown","current","e","contains","target","matches","document","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,eAAe,SAASC,eAAT,GAAyC;AAAA;;AAAA,MAAhBC,GAAgB,uEAAV,QAAU;AACpD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMK,OAAO,GAAGN,MAAM,EAAtB;AACA,QAAMO,sBAAsB,GAAGP,MAAM,CAAC,EAAD,CAArC;;AACAO,EAAAA,sBAAsB,CAACC,OAAvB,GAAkCC,CAAD,IAAO;AACpC,QAAGH,OAAO,CAACE,OAAR,IAAmB,CAACF,OAAO,CAACE,OAAR,CAAgBE,QAAhB,CAAyBD,CAAC,CAACE,MAA3B,CAApB,IAA0D,CAACF,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiBT,GAAjB,CAA9D,EAAqF;AACjFE,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH;AACJ,GAJD;;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCP,sBAAnC;AACA,WAAO,MAAM;AACTM,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCR,sBAAtC;AACH,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;AAMA,SAAO;AACHH,IAAAA,IADG;AAEHE,IAAAA,OAFG;AAGHD,IAAAA;AAHG,GAAP;AAKH;;GApBuBH,e","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function useClickOutSide(dom = \"button\") {\r\n    const [show, setShow] = useState(false);\r\n    const nodeRef = useRef();\r\n    const handleClickOutDropDown = useRef({});\r\n    handleClickOutDropDown.current = (e) => {\r\n        if(nodeRef.current && !nodeRef.current.contains(e.target) && !e.target.matches(dom)) {\r\n            setShow(false);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        document.addEventListener('click', handleClickOutDropDown);\r\n        return () => {\r\n            document.removeEventListener('click', handleClickOutDropDown);\r\n        }\r\n    }, []);\r\n    return {\r\n        show,\r\n        nodeRef,\r\n        setShow\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}