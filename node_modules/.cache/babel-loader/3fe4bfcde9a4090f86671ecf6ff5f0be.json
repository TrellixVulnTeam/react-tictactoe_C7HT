{"ast":null,"code":"var _jsxFileName = \"D:\\\\JS\\\\env\\\\env\\\\src\\\\Components\\\\TestUseEffect\\\\TestUseEffect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TestUseEffect = () => {\n  _s();\n\n  const [count, setCount] = useState(5);\n  let timeRef = useRef(null);\n\n  const handleCount = () => {\n    if (timeRef.current) return;\n    timeRef.current = setInterval(() => {\n      setCount(prev => prev - 1);\n    }, 1000);\n  };\n\n  const handleStop = () => {\n    clearInterval(timeRef.current);\n    timeRef.current = null;\n  };\n\n  useEffect(() => {\n    if (count == 0) {\n      clearInterval(timeRef.current);\n    }\n  }, [count]);\n  useEffect(() => {\n    return () => {\n      clearInterval(timeRef.current);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center \",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-5xl\",\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCount,\n      className: \"inline-block px-6 py-3 bg-purple-500 text-white cursor-pointer m-3 rounded-lg\",\n      children: \"Count Down\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStop,\n      className: \"inline-block px-6 py-3 bg-purple-500 text-white cursor-pointer rounded-lg\",\n      children: \"Stop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TestUseEffect, \"FKQthqon2HlT1E6EClHkY4SpiAE=\");\n\n_c = TestUseEffect;\nexport default TestUseEffect;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestUseEffect\");","map":{"version":3,"sources":["D:/JS/env/env/src/Components/TestUseEffect/TestUseEffect.js"],"names":["React","useState","useEffect","useRef","TestUseEffect","count","setCount","timeRef","handleCount","current","setInterval","prev","handleStop","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;AAGA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,MAAIM,OAAO,GAAGJ,MAAM,CAAC,IAAD,CAApB;;AACA,QAAMK,WAAW,GAAG,MAAM;AACtB,QAAGD,OAAO,CAACE,OAAX,EAAoB;AAEpBF,IAAAA,OAAO,CAACE,OAAR,GAAkBC,WAAW,CAAC,MAAK;AAC/BJ,MAAAA,QAAQ,CAACK,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAR;AACH,KAF4B,EAE1B,IAF0B,CAA7B;AAIH,GAPD;;AAQA,QAAMC,UAAU,GAAG,MAAM;AACrBC,IAAAA,aAAa,CAACN,OAAO,CAACE,OAAT,CAAb;AACAF,IAAAA,OAAO,CAACE,OAAR,GAAkB,IAAlB;AACH,GAHD;;AAIAP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGG,KAAK,IAAI,CAAZ,EAAc;AACVQ,MAAAA,aAAa,CAACN,OAAO,CAACE,OAAT,CAAb;AACH;AAEJ,GALQ,EAKP,CAACJ,KAAD,CALO,CAAT;AAMAH,EAAAA,SAAS,CAAC,MAAM;AACZ,WAAO,MAAM;AACTW,MAAAA,aAAa,CAACN,OAAO,CAACE,OAAT,CAAb;AACH,KAFD;AAGH,GAJQ,EAIP,EAJO,CAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,gBAA0BJ;AAA1B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEG,WAAjB;AAA8B,MAAA,SAAS,EAAC,+EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAEI,UAAjB;AAA6B,MAAA,SAAS,EAAC,2EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAnCD;;GAAMR,a;;KAAAA,a;AAqCN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\n\r\nconst TestUseEffect = () => {\r\n    const [count, setCount] = useState(5);\r\n    let timeRef = useRef(null);\r\n    const handleCount = () => {\r\n        if(timeRef.current) return;\r\n\r\n        timeRef.current = setInterval(() =>{    \r\n            setCount(prev => prev - 1);\r\n        }, 1000);\r\n        \r\n    }\r\n    const handleStop = () => {\r\n        clearInterval(timeRef.current);\r\n        timeRef.current = null;\r\n    }\r\n    useEffect(() => {\r\n        if(count == 0){\r\n            clearInterval(timeRef.current);\r\n        }\r\n       \r\n    },[count]);\r\n    useEffect(() => {\r\n        return () => {\r\n            clearInterval(timeRef.current);\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"text-center \">\r\n            <h2 className=\"text-5xl\">{count}</h2>\r\n            <button onClick={handleCount} className=\"inline-block px-6 py-3 bg-purple-500 text-white cursor-pointer m-3 rounded-lg\">Count Down</button>\r\n            <button onClick={handleStop} className=\"inline-block px-6 py-3 bg-purple-500 text-white cursor-pointer rounded-lg\">Stop</button>\r\n                           \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TestUseEffect;"]},"metadata":{},"sourceType":"module"}